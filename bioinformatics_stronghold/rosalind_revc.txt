TACTGGGGGTACACGTGCCGTGGATCTGGCAACTAAGTAACATTGCGTCCAAGTTAACAGGGTAAAAATATCTATGGCGCCAAAGGTGTTCATAGTCGATAGCCGCGCCCAGCTCATGATGAAAACTCCTAAAGATCTCGGACACGGTAGCACTTCCGCACACGCGCCACGTGGGTGCTATCTATGTCCATGAACCACGGAGTGTGCGACAAAGACACGACCTTTACTAAGTTTCAAACCTCCCCACGGTTGTTGGCCCTACTAGGATAGGCTAATGCGCGATCCACTCGGACCAGAACGCGCCTTTGCACGTGCCACACTAATGGCTAGGAACACCGGGAGCTAGCAACGTAACCGTTTAATCCCCTAACTAACTCCCTACAACTCAGAGCTCGCACGGACCCGTATATCGAATATCGCGCGTAGGCGTTAAGAAGCTCCACAACAATACTCCAGGTTAATAGATGGTAGCTAGTGTTGCGTATTCTAACAGTTTTGAGTCACGCCCGATGATACCTCACCAGGGTCGGGAAATTCCGAATTACCAATTTATATAATTAAGGGGGATACACGCGTTACCTTTCGAACCGTGGACTTTGTCCGATCATGTTCAGCGCCCGGTCTTTTGCGTCTACTCCAGCGGCGGTTGATGCCCATCCTGGCCGCGTTGTCGAGGTTATTTATCTTATTTCTTCGTGGAGCACCTACTACCGTTCGCGTAACACTGTTCGTATTATTCTTTTATGAAGGAATACGCACCGGTTAACCCTCGATTTTCCATTCTTGCGTAGTAGCGTCGGAGGTCCCATCGCGATATACCGAGACCCACAGTAC

'''

I did brute force: converted T to '_' and then A to T and then '_' to A. Likewise for C and G.

Better solutions:

1. st = st.replace('A', 't').replace('T', 'a').replace('C', 'g').replace('G', 'c').upper()[::-1]

2. Or I could have used a dictionary for conversions.

3. This also works: from string import maketrans; print(s[::-1].translate(maketrans('ACGT', 'TGCA'))) # best since in-place and doesn't need to read strings multiple times like the first method.

'''

